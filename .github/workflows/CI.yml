name: CI

on:
  push:
    branches: [ master ]
    tags: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    if: "!contains(github.event.head_commit.message, 'skip-ci')"

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [20.12.x]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Cache ~/.pnpm-store
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-store
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ matrix.node-version }}-test-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-test-
            ${{ runner.os }}-

      - name: install
        run: yarn --frozen-lockfile

      - name: build and test
        run: yarn test

  release:
    runs-on: ubuntu-latest
    needs: ["test"]
    if: "!contains(github.event.head_commit.message, 'skip-release') && !contains(github.event.head_commit.message, 'skip-ci') && github.event_name != 'pull_request'"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'yarn'
      # - name: Cache ~/.pnpm-store
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-pnpm-store
      #   with:
      #     path: ~/.pnpm-store
      #     key: ${{ runner.os }}-${{ matrix.node-version }}-release-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-${{ matrix.node-version }}-release-${{ env.cache-name }}-
      #       ${{ runner.os }}-${{ matrix.node-version }}-release-
      #       ${{ runner.os }}-

      - name: install
        run: yarn --frozen-lockfile

      - run: npx semantic-release@20 --branches master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
